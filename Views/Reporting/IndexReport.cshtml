@*
02.10.14 - TR - Created 
*@ @*
/* Authors:
 *      Tonia Roddick (troddick@usgs.gov)
 * Copyright:
 *      2014 USGS - WiM
 * Purpose:
 *      Report creation page 
 */
 *@
@using System.Configuration;
@using STNServices;
@using STNWeb.Assets.Resources;
@using STNWeb.Models;


<script src="@Url.Content("~/Assets/Scripts/jquery-1.8.3.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery-ui-1.10.4.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery.maskedinput.min.js")" type="text/javascript"></script>

@{
    ViewBag.Title = "Reporting";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model STNWeb.Models.ReportingModel
           
<style type="text/css">
    .ui-tabs .ui-tabs-nav li a
    {
        padding: 0.5em 0.5em;
    }
    .ui-widget#statesTabs
    {
        min-height: 300px !important;   
    }

</style>
<script type="text/javascript">
    $(function () {
        $("#tabs").tabs();
        $("#statesTabs").tabs();
    });

    $(function () {
        //datepicker 
        $('input').filter('.datepicker').datepicker({
            changeMonth: true,
            yearRange: '1965:2030',
            changeYear: true,
            onClose: function (dateText, inst) {
                //get which id this date is for onSelect
                var whichDate = this.id;
                if (whichDate == "dateADate") {
                    var date = $(this).val();
                    $("#queryDate").text(date);
                    $("#qDate").val(date); //named inputs for controller
                    $('input[name="QueryDate"]').valid();
                }
            }
        });
    });
</script>


<script src="@Url.Content("~/Assets/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="dataTitle">
    <div class="title">
        Reporting</div>
   
</div>@*ui-label-a*@
<br clear="all" />
<hr class="headerUnderline" />

@if (ViewData.ContainsKey("IncompleteReports"))
{
        
    List<REPORTING_METRICS> incompleteReports = ViewData["IncompleteReports"] as List<REPORTING_METRICS>;
    <div>You have incomplete Reports. Click the Report date to complete.</div>
    <ul>
    @foreach (REPORTING_METRICS rm in incompleteReports)
    {
        <input type="hidden" id="dateHolder" value="@(((DateTime)rm.REPORT_DATE).ToShortDateString())" />
        <li><a onclick="OpenReport(@(rm.REPORTING_METRICS_ID));">@(((DateTime)rm.REPORT_DATE).ToShortDateString())</a></li>
    }
    </ul>
}

<div id="tabs">
    <ul>
        <li><a href="#tab1-Create">Submit Daily<br />
            Report</a></li>
        <li><a href="#tabs2-Generate">Generate<br />
            Summaries</a></li>
    </ul>   

    @*Create ReportTab*@
    <div id="tab1-Create">
        <div id="content">     
        @{Html.RenderAction("ReportCreate", "Reporting");}
    </div>
    </div>    @* end of Create tab div *@

    @* Generate ReportTab*@
    <div id="tabs2-Generate">    
        <div>
<div class="fiftyPercColumn" style="width:60%">                           
    <table class="Sec1Reporting-table" style="border:none">
        @* Event portion of query builder *@
        <tr><td colspan="2"><span style="font-size: x-large; margin-left:10px; font-family: 'BryantBold'">Step 1: Select Event, Date, and State(s)</span></td></tr>
        <tr>
            <td><span style="font-size: large; margin-left:10px; font-family: 'BryantBold'" class="required">Event</span></td>
            <td>
                <select style="width:38%" id="eventsList" class="required stnSelectInput ui-shadow-inset" data-native-menu="false" data-mini="true">
                    <option value="">Choose an Event</option>
                    @foreach (EVENT anEvent in ViewData["EventList"] as List<EVENT>)
                    {
                        <option value='@anEvent.EVENT_ID'>@anEvent.EVENT_NAME</option> 
                    }
                </select>
            </td>
        </tr>
                                        
        <tr><td colspan="2"><hr /></td></tr>
        @* Date portion of query builder (part 1) *@
        <tr>
            <td><span class="required" style="font-size: large; margin-left:10px; font-family: 'BryantBold'">Date</span></td>
            <td><input type="text" id="dateADate" style="width:35%" class="required stnTextInput ui-shadow-inset datepicker" data-mini="true" value='@((DateTime.Now).ToString("MM/dd/yyyy"))' /></td>
        </tr>
                    
        <tr><td colspan="2"><hr /></td></tr>
        @* States portion of query builder *@
        <tr>
            <td><span style="font-size: large; margin-left:10px; font-family: 'BryantBold'">State</span></td>
            <td>
                <select id="statesList" multiple="multiple" class="stnSelectInput ui-shadow-inset" data-native-menu="false" style="width:160px !important" data-mini="true">
                    
                    @foreach (STATES aState in ViewData["stateList"] as List<STATES>)
                    {
                        <option value='@aState.STATE_ABBREV'>@aState.STATE_NAME</option> 
                    }
                </select>
                <script src="@Url.Content("~/Assets/Scripts/jquery.multiple.select.js")" type="text/javascript"></script>
                <link href="@Url.Content("~/Assets/Styles/multiple-select.css")" rel="stylesheet" type="text/css" />

                <script type="text/javascript">
                    $("#statesList").multipleSelect({
                        placeholder: "Filter by State(s)",
                        selectAll: false,
                        onClose: function () {
                            var stateNames = $("#statesList").multipleSelect("getSelects");
                            if (stateNames.length == 0) {
                                $("#stateValue").text("");
                                $("#STATE").val("");
                            }
                            else {
                                var stringNames;
                                $.each(stateNames, function (name, value) {
                                    if (stringNames == undefined) {
                                        stringNames = value;
                                    }
                                    else {
                                        stringNames += ", " + value;
                                    }
                                });
                                stringNames.slice(0, -1);
                                $("#stateValue").text(stringNames);
                                $("#STATE").val(stringNames);
                            }
                        }
                    });
                </script>
            </td>
        </tr>
                                        
    </table>
                       
</div> @* end of site column*@

<div class="fiftyPercColumn" style="width:40%">
    <div id="statesTabs">
        <ul>
            <li><a href="#StatesToday">Today</a></li>
            <li><a href="#StatesYesterday">Yesterday</a></li>
            <li><a href="#StatesGo">Pick a Date</a></li>
        </ul>
                   
        <div id="StatesToday">
        <input type="button" onclick="GetTodaysReports();" class="STNButton" style="margin-top:15px" value="Get Today's Reports" />
        @*@{ 
            if (ViewData.ContainsKey("TodayReports")) 
            { 
                List<List<ReportingModel>> TodaysReports = ViewData["TodayReports"] as List<List<ReportingModel>>;
                            
                <table class="Sec1Reporting-table" style="border:none">
                    @foreach (List<ReportingModel> EventRepList in TodaysReports)
                    {
                        <tr><td colspan="3">@EventRepList[0].anEvent.EVENT_NAME</td></tr>
                        foreach (ReportingModel erl in EventRepList)
                        {
                            if (erl.aReport.COMPLETE == 1)
                            {
                                <tr>
                                    <td style="color:Green; width:34%">@erl.aReport.STATE</td>
                                    <td>@Html.ActionLink("View", "ReportDetails", "Reporting", new { reportId = @erl.aReport.REPORTING_METRICS_ID, StateDetail = "true" }, new { @class = "STNButton", @style = "padding: 3px 10px; background-color: #F37A49", @target = "_blank" })</td>
                                    <td>@Html.ActionLink("Project Alert", "ProjectAlert", "Reporting", new { reportId = @erl.aReport.REPORTING_METRICS_ID }, new { @class = "STNButton", @style = "padding: 3px 10px; background-color: #F37A49", @target = "_blank" })</td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td style="color:Red">@erl.aReport.STATE</td>
                                    <td>@Html.ActionLink("View", "ReportDetails", "Reporting", new { reportId = @erl.aReport.REPORTING_METRICS_ID, StateDetail = "true" }, new { @class = "STNButton", @style = "padding: 3px 10px; background-color: #F37A49", @target = "_blank" })</td>
                                    <td><a class="STNButton" style="width: 54%; padding: 3px; background-color: #F37A49" onclick="OpenReport(@(erl.aReport.REPORTING_METRICS_ID));">Complete</a></td>
                                </tr>
                            }
                        }
                    }
                </table>
            }
            else 
            {
                <div>No Reports Completed Today.</div>
            }
                        
        }*@
        </div> @* end of Today tab *@

        <div id="StatesYesterday">
        @{ 
            if (ViewData.ContainsKey("YesterdayReports")) 
            {
                List<List<ReportingModel>> YesterdayReports = ViewData["YesterdayReports"] as List<List<ReportingModel>>;
                            
                <table class="Sec1Reporting-table" style="border:none">
                    @foreach (List<ReportingModel> EventRepList in YesterdayReports)
                    {
                        <tr><td colspan="3">@EventRepList[0].anEvent.EVENT_NAME</td></tr>
                        foreach (ReportingModel erl in EventRepList)
                        {
                            if (erl.aReport.COMPLETE == 1)
                            {
                                <tr>
                                    <td style="color:Green; width:34%">@erl.aReport.STATE</td>
                                    <td>@Html.ActionLink("View", "ReportDetails", "Reporting", new { reportId = @erl.aReport.REPORTING_METRICS_ID, StateDetail = "true" }, new { @class = "STNButton", @style = "padding: 3px 10px; background-color: #F37A49", @target = "_blank" })</td>
                                    <td>@Html.ActionLink("Project Alert", "ProjectAlert", "Reporting", new { reportId = @erl.aReport.REPORTING_METRICS_ID }, new { @class = "STNButton", @style = "padding: 3px 10px; background-color: #F37A49", @target = "_blank" })</td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td style="color:Red">@erl.aReport.STATE</td>
                                    <td>@Html.ActionLink("View", "ReportDetails", "Reporting", new { reportId = @erl.aReport.REPORTING_METRICS_ID, StateDetail = "true" }, new { @class = "STNButton", @style = "padding: 3px 10px; background-color: #F37A49", @target = "_blank" })</td>
                                    <td><a class="STNButton" style="width: 54%; padding: 3px; background-color: #F37A49" onclick="OpenReport(@(erl.aReport.REPORTING_METRICS_ID));">Complete</a></td>
                                </tr>
                            }
                        }
                    }
                </table>
            }
            else
            {
                <div>No Reports Completed Today.</div>
            }
                        
        }
        </div> @* end of Yesterday Tab *@
                
        <div id="StatesGo">
            <input type="text" id="StatesDate" class="stnTextInput ui-shadow-inset datepicker" style="width:54%" data-mini="true"  />
            <a id="DateViewButtonState1" class="STNButton" style="width: 54%; padding: 3px; margin-left:8px; background-color: #F37A49" onclick="GetStatesByDate();">Get States</a>
                        
            <div id="returningStatesPage" style="margin-top:25px"></div>
        </div>
    </div> @* end of "statesTabs"*@
</div> @* end of fiftyPercColumn*@

<br clear="all" />
              
@* Generate Summary area *@
<hr style="border: 1px solid black" />
<div><span style="font-size: x-large; margin-left:10px; font-family:'BryantBold'">Step 2: Confirm selections</span></div>
            
@*what they chose *@
@using (Html.BeginForm("GenerateReport", "Reporting", FormMethod.Post, new { target = "_blank", id = "GenerateReportForm" }))
{
    <table class="Sec1Reporting-table" style="border:none">
        <tr><td colspan="2"></td></tr>
        <tr>
            <td>Event:</td>
            <td>
                <span id="eventChosen"></span> 
                <input type="hidden" name="EventChosen" class="required" id="eventToSearch" data-mini="true" />
            </td>
            
        </tr>
        <tr>
            <td style="width:15%">Date:</td>
            <td>
                <span id="queryDate">@(DateTime.Now.ToString("MM/dd/yyyy"))</span>
                <input type="hidden" name="QueryDate" class="required" id="qDate" value='@(DateTime.Now.ToString("MM/dd/yyyy"))' />
            </td>
          
        </tr>
        <tr>
            <td>State:</td>
            <td>
                <span id="stateValue"></span>
                <input type="hidden" name="StateValue" id="STATE" />
            </td>
        </tr>
                
    </table>
                
    <table style="width:64%; margin-top:10px">
        <tr><td colspan="5"><span style="font-size: x-large; margin-left:10px; font-family:'BryantBold'">Step 3: Select your desired output</span></td></tr>
        <tr><td></td></tr>
        <tr>
            <td><input type="submit" name="Generate" class="STNButton" style="padding:3px" value="Display Metrics Summary" /></td>
            <td><input type="submit" name="Generate" class="STNButton" style="padding:3px" value="Display Contacts Summary" /></td>
            <td><input type="submit" name="Generate" class="STNButton" style="padding:3px" value="Generate CSV Summary" /></td>
        </tr>
    </table>
    
}
         </div>
        <br clear="all" />

        
    </div>    @* end of Generate tab div *@
</div> @* end of "tabs" *@


<style type="text/css">
    #CreateReportForm label.error {
        @*margin-left: 10px;*@
        width: auto;
        display: block;
        color: Red;
    }
    label.error {
        @*margin-left: 10px;*@
        width: auto;
        display: block;
        color: Red;
    } 
</style>

<script type="text/javascript">
    $().ready(function () {
        $("#CreateReportForm").validate();
        $("#GenerateReportForm").validate();
        
    });
    $.validator.setDefaults({ ignore: "" })

    $("#GenerateReportForm").validate({
        rules: {
            EventChosen: "required",
            QueryDate: "required"
        },
        messages: {
            EventChosen: "Please choose an event above",
            QueryDate: "Please choose a date above"
        }
    });

    function loading() {
        $("#loading").fadeIn();
    }

    function cancelClick() {
        $("#loading").fadeIn();
        window.location.href = '@Url.Action("Index", "Home")'
    }

    //ReportCreatePV: incomplete report date was clicked, go get the report and populate form
    //also called from IndexReport Generate Report tab's "Complete" click to complete a report in the State area
    function OpenReport(reportMetricID) {
        $("#loading").fadeIn();
        $.ajax({
            url: '@Url.Action("GetThisReport", "Reporting")',
            type: 'GET',
            data: { reportID: reportMetricID },
            success: function (response) {
                //if on generate tab, make the summary tab active 
                var active = $("#tabs").tabs("option", "active");
                if (active == 1) {
                    $("#tabs").tabs("option", "active", 0);
                }
               // var aDate = $("#dateHolder").val();
                $("#content").html(response);
                $("#loading").fadeOut();
            },
            error: function (xhr) {
                alert("didn't work");
                $("#loading").fadeOut();
            }
        });
    }
       
    //"Populate Totals" was clicked in ReportCreatePV
    //go get values for Personnel Yesterdays, and Contacts (if report was done with same parameters yesterday)
    // and then go get all the counts for instruments and hwms
    function getValues() {
        var yestRepTots = false;
        var yestRepRespones;
        var instrTots = false;
        var instrResponse;
        var thisDate = $("#aDate").val();
        var eventId = $("#eventList option:selected").val();
        var stateAbb = $("#stateList option:selected").val();

        if (eventId == "" || stateAbb == "") {
            alert("You must choose an Event and State before Populating Totals.");
        }
        else {
            //1. make sure all inputs are clear
            //ClearInputs();
            //2. Go see if a report was done yesterday and populate personnel and contacts
            $("#loading").fadeIn();
            $.ajax({
                url: '@Url.Action("GetYestReportTotals", "Reporting")',
                type: 'GET',
                data: { date: thisDate, eventID: eventId, stateAbbrev: stateAbb },
                success: function (Yresponse) {
                    yestRepTots = true;
                    yestRepRespones = Yresponse;
                    //3. now go get all the numbers for instruments and hwm's for this event/date/state (need to put 0 in those that dont have counts)
                    $.ajax({
                        url: '@Url.Action("GetDailyReportTotals", "Reporting")',
                        type: 'GET',
                        data: { date: thisDate, eventID: eventId, stateAbbrev: stateAbb },
                        success: function (Dresponse) {
                            instrTots = true;
                            instrResponse = Dresponse;
                            if (yestRepTots && instrTots) {
                                if (yestRepRespones.aReport != null) {
                                    PopulatePersonnelAndContacts(yestRepRespones);
                                }
                                else {
                                    alert("No Report was completed yesterday");
                                }
                                if (instrResponse != null) {
                                    PopulateSensorsHWMs(instrResponse);
                                }
                                $("#loading").fadeOut();
                            }
                            else {
                                alert("Try again, something went wrong");
                                $("#loading").fadeOut();
                            }
                        },
                        error: function (xhr) {
                            alert("didn't work");
                            $("#loading").fadeOut();
                        }
                    });
                },
                error: function (xhr) {
                    alert("didn't work");
                    $("#loading").fadeOut();
                }
            });
            $("#loading").fadeOut();
        }
    }

    function GetTodaysReports() {
        $.ajax({
            url: '@Url.Action("GetTodayReports", "Reporting")',
            type: 'GET',
            success: function (response) {
                $("#StatesToday").html(response);
            }
        });
                
    }

    //ReportCreatePV: GetThisReport was success, here's Personnel and Contacts to populate for yesterday
    function PopulatePersonnelAndContacts(response) {
        $("#pInFieldYestSurf").val(response.aReport.SW_YEST_FIELDPERS); $("#pInFieldYestWQ").val(response.aReport.WQ_YEST_FIELDPERS);
        $("#pInOfficeYestSurf").val(response.aReport.SW_YEST_OFFICEPERS); $("#pInOfficeYestWQ").val(response.aReport.WQ_YEST_OFFICEPERS);

        $("#depStaffFName").val(response.DeplContact.FNAME); $("#depStaffLName").val(response.DeplContact.LNAME);
        $("#depStaffEmail").val(response.DeplContact.EMAIL); $("#depStaffPhone").val(response.DeplContact.PHONE);
        $("#depStaffAltPhone").val(response.DeplContact.ALT_PHONE);

        if (response.GenContact != null) {
            $("#genStaffFName").val(response.GenContact.FNAME); $("#genStaffLName").val(response.GenContact.LNAME);
            $("#genStaffEmail").val(response.GenContact.EMAIL); $("#genStaffPhone").val(response.GenContact.PHONE);
            $("#genStaffAltPhone").val(response.GenContact.ALT_PHONE);
        }

        if (response.InlandContact != null) {
            $("#inFlStaffFName").val(response.InlandContact.FNAME); $("#inFlStaffLName").val(response.InlandContact.LNAME);
            $("#inFlStaffEmail").val(response.InlandContact.EMAIL); $("#inFlStaffPhone").val(response.InlandContact.PHONE);
            $("#inFlStaffAltPhone").val(response.InlandContact.ALT_PHONE);
        }

        if (response.CoastContact != null) {
            $("#coaFlStaffFName").val(response.CoastContact.FNAME); $("#coaFlStaffLName").val(response.CoastContact.LNAME);
            $("#coaFlStaffEmail").val(response.CoastContact.EMAIL); $("#coaFlStaffPhone").val(response.CoastContact.PHONE);
            $("#coaFlStaffAltPhone").val(response.CoastContact.ALT_PHONE);
        }

        if (response.WaterContact != null) {
            $("#watQualStaffFName").val(response.WaterContact.FNAME); $("#watQualStaffLName").val(response.WaterContact.LNAME);
            $("#watQualStaffEmail").val(response.WaterContact.EMAIL); $("#watQualStaffPhone").val(response.WaterContact.PHONE);
            $("#watQualStaffAltPhone").val(response.WaterContact.ALT_PHONE);
        }
        $("#loading").fadeOut();

    }

    //ReportCreatePV: here's the totals back from "populate totals" of sensors and hwms
    function PopulateSensorsHWMs(response) {
        $("#span_rdgDeployed").text(response.DEP_RAPDEPL_GAGE); $("#rdgDeployed").val(response.DEP_RAPDEPL_GAGE);
        $("#span_rdgRecovered").text(response.REC_RAPDEPL_GAGE); $("#rdgRecovered").val(response.REC_RAPDEPL_GAGE);
        $("#span_rdgLost").text(response.LOST_RAPDEPL_GAGE); $("#rdgLost").val(response.LOST_RAPDEPL_GAGE);

        $("#span_wlsDeployed").text(response.DEP_WTRLEV_SENSOR); $("#wlsDeployed").val(response.DEP_WTRLEV_SENSOR);
        $("#span_wlsRecovered").text(response.REC_WTRLEV_SENSOR); $("#wlsRecovered").val(response.REC_WTRLEV_SENSOR);
        $("#span_wlsLost").text(response.LOST_WTRLEV_SENSOR); $("#wlsLost").val(response.LOST_WTRLEV_SENSOR);

        $("#span_wsDeployed").text(response.DEP_WV_SENS); $("#wsDeployed").val(response.DEP_WV_SENS);
        $("#span_wsRecovered").text(response.REC_WV_SENS); $("#wsRecovered").val(response.REC_WV_SENS);
        $("#span_wsLost").text(response.LOST_WV_SENS); $("#wsLost").val(response.LOST_WV_SENS);

        $("#span_barDeployed").text(response.DEP_BAROMETRIC); $("#barDeployed").val(response.DEP_BAROMETRIC);
        $("#span_barRecovered").text(response.REC_BAROMETRIC); $("#barRecovered").val(response.REC_BAROMETRIC);
        $("#span_barLost").text(response.LOST_BAROMETRIC); $("#barLost").val(response.LOST_BAROMETRIC);

        $("#span_msDeployed").text(response.DEP_METEOROLOGICAL); $("#msDeployed").val(response.DEP_METEOROLOGICAL);
        $("#span_msRecovered").text(response.REC_METEOROLOGICAL); $("#msRecovered").val(response.REC_METEOROLOGICAL);
        $("#span_msLost").text(response.LOST_METEOROLOGICAL); $("#msLost").val(response.LOST_METEOROLOGICAL);

        $("#span_hwmFlagged").text(response.HWM_FLAGGED); $("#hwmFlagged").val(response.HWM_FLAGGED);
        $("#span_hwmCollected").text(response.HWM_COLLECTED); $("#hwmCollected").val(response.HWM_COLLECTED);
        $("#loading").fadeOut();
    }

    //ReportCreatePV: formatting number only and phone number format    
    jQuery(function ($) {
        //section 5 Contacts
        $("#depStaffPhone").mask("(999) 999-9999? x99999"); $("#depStaffAltPhone").mask("(999) 999-9999? x99999");
        $("#genStaffPhone").mask("(999) 999-9999? x99999"); $("#genStaffAltPhone").mask("(999) 999-9999? x99999");
        $("#inFlStaffPhone").mask("(999) 999-9999? x99999"); $("#inFlStaffAltPhone").mask("(999) 999-9999? x99999");
        $("#coaFlStaffPhone").mask("(999) 999-9999? x99999"); $("#coaFlStaffAltPhone").mask("(999) 999-9999? x99999");
        $("#watQualStaffPhone").mask("(999) 999-9999? x99999"); $("#watQualStaffAltPhone").mask("(999) 999-9999? x99999");
    });

    //number formatter (any number and decimal place)
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    ////////////////////////////////////////////////////////////////////////////////
    //IndexReport - Generate Summary tab = event chosen
    $("#eventsList").change(function () {
        var eventName = this.selectedOptions[0].text;
        var eventId = this.selectedOptions[0].value;
        if (eventId == 0) {
            $("#eventChosen").text("");
            $("#eventToSearch").val("");
            $("#EventChosen").val(""); //Named input to pass back to controller

        }
        else {
            $("#eventChosen").text(eventName);
            $("#eventToSearch").val(eventId);
            $("#EventChosen").val(eventId); //Named input to pass back to controller
        }
        //$('input[name="EventChosen"]').valid();
    });
    
    //date was picked to determine which states have submitted reports for that date
    function GetStatesByDate() {
        var aDate = $("#StatesDate").val();
        if (aDate == "") {
            alert("Please pick a date first");
        }
        else {
            $("#loading").fadeIn();
            $.ajax({
                url: '@Url.Action("ReportByDate", "Reporting")',
                type: 'GET',
                data: { date: aDate },
                success: function (response) {
                    if (response != null) {
                        $("#returningStatesPage").html(response);
                        $("#loading").fadeOut();
                    }
                },
                error: function (xhr) {
                    alert("error");
                    $("#loading").fadeOut();
                }
            });
        }
    }

</script>