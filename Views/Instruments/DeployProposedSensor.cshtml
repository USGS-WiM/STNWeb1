@* Comments: 
04.22.14 - TR - added Tape down information
04.16.14 - TR - added validation
11.01.13 - TR - Created 

*@

@*
/* Authors:
 *      Tonia Roddick (troddick@usgs.gov)
  * Copyright:
 *      2012 USGS - WiM
 * Purpose:
 *      Deploy a Site's Proposed Instrument 
 */
 *@

@using STNServices;
@using STNWeb.Assets.Resources;
@using STNWeb.Models;

@model STNWeb.Models.InstrumentModel
           
<script src="@Url.Content("~/Assets/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@{
    ViewBag.Title = "Deploy Proposed Sensor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div id="loading"><div id="loadingcontent"><p id="loadingspinner" style=""><img src="@Url.Content("~/Assets/Images/loading1.gif")"  /></p></div></div>
<div id="dataTitle">
    <div class="title">Deploy Proposed Sensor</div>
</div>
<br clear="all" />
<hr class="headerUnderline" />

@{ decimal eventId = Convert.ToDecimal(Session["EventId"]); }

@using (Ajax.BeginForm("DeployProposed", "Instruments", new AjaxOptions() { HttpMethod = "POST" }, new { @id = "DeployProposedForm" }))
{
    <input type="hidden" name="Instr.INSTRUMENT_ID" value="@Model.Instr.INSTRUMENT_ID" />
    <input type="hidden" name="Instr.SITE_ID" value='@ViewData["SiteId"]' />
    
    <input type="hidden" name="DeplInstrStatus.STATUS_TYPE_ID" value="1" />
    <input type="hidden" name="DeplInstrStatus.INSTRUMENT_ID" value="@Model.PropInstrStatus.INSTRUMENT_ID" />
    
    
    if (Session["TeamId"] != null)
    {
    <input type="hidden" name="DeplInstrStatus.COLLECTION_TEAM_ID" value='@Session["TeamId"]' />
    }
    else
    {
        <input type="hidden" name="DeplInstrStatus.COLLECTION_TEAM_ID" value='0' />
    }
    
    
    <div class="fiftyPercColumn" style="width:55%">

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(InstrumentsStrings.Event_Label)</div>
                <div class="ui-block-b">
                        <select id="eventIdDD" class="stnSelectInput ui-shadow-inset" name="Instr.EVENT_ID" data-native-menu="false" data-mini="true">
					        <option value="0">Choose an Event</option>
                            @foreach (STNServices.EVENT anEv in ViewData["EventList"] as List<EVENT>)
                            {
                                <option @( (anEv.EVENT_ID == eventId) ? "selected" : "") value='@anEv.EVENT_ID'>@anEv.EVENT_NAME</option> 
                            }
                        </select>
                        <br />	
                    </div>
                </div>
            </div>

        @{ SENSOR_TYPE thisSensorType = ViewData["aSensorType"] as SENSOR_TYPE; }
        <input type="hidden" id="hiddenSensorTypeID" value="@thisSensorType.SENSOR_TYPE_ID" />

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a"><span class="required">@Html.Label(InstrumentsStrings.SensorType_Label)</span></div>
                <div class="ui-block-b">
                    <select id="SensorTypeDDL" class="required stnSelectInput ui-shadow-inset" name="Instr.SENSOR_TYPE_ID" data-native-menu="false" data-mini="true">
					    <option value="">Choose an Instrument Type</option>
                        @foreach (STNServices.SENSOR_TYPE aSensType in ViewData["SensorTypes"] as List<SENSOR_TYPE>)
                        {
                            <option @(aSensType.SENSOR_TYPE_ID == thisSensorType.SENSOR_TYPE_ID ? "selected" : "") value='@aSensType.SENSOR_TYPE_ID'>@aSensType.SENSOR</option> 
                        }
                    </select><br />	
                </div>
                <div class="" id="Instr.SENSOR_TYPE_ID_validate"></div>
            </div>
        </div>

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a"><span class="required">@Html.Label(InstrumentsStrings.SensorBrand_Label)</span></div>
                <div class="ui-block-b">
                    <select id="SensorBrandDDL" class="required stnSelectInput ui-shadow-inset" name="Instr.SENSOR_BRAND_ID" data-native-menu="false" data-mini="true">
					    <option value="">Choose a Sensor Brand</option>
                        @foreach (SENSOR_BRAND aSensBrand in ViewData["SensorBrands"] as List<SENSOR_BRAND>)
                        {
                            <option value='@aSensBrand.SENSOR_BRAND_ID'>@aSensBrand.BRAND_NAME</option> 
                        }
                    </select><br />	
                </div>
            </div>
        </div>

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a"><span class="required">@Html.Label(InstrumentsStrings.SerialNo_Label)</span></div>
                <div class="ui-block-b"><input type="text" class="required stnTextInput ui-shadow-inset" name="Instr.SERIAL_NUMBER" data-mini="true" /></div>
                <div class="" id="Instr.SERIAL_NUMBER_validate"></div>
            </div>
        </div>
      
        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(InstrumentsStrings.HousingSerialNo_Label)</div>
                <div class="ui-block-b"><input type="text" class="stnTextInput ui-shadow-inset" name="Instr.HOUSING_SERIAL_NUMBER" data-mini="true" /></div>
            </div>
        </div>
        
        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">Housing Types:</div>
                <div class="ui-block-b">
                    <select id="HousingTypeDDL" class="stnSelectInput ui-shadow-inset" name="Instr.HOUSING_TYPE_ID" data-native-menu="false" data-mini="true">
					    <option value="">Choose an Housing Type</option>
                        @foreach (HOUSING_TYPE aHT in ViewData["HousingTypes"] as List<HOUSING_TYPE>)
                        {
                            <option value='@aHT.HOUSING_TYPE_ID'>@aHT.TYPE_NAME</option> 
                        }
                    </select><br />	
                </div>
            </div>
        </div>

        <div style="display:none" id="vendedDiv">
            <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">@Html.Label(InstrumentsStrings.Vented_Label)</div>
                    <div class="ui-block-b">
                        <span>
                            <input type="radio" name="Instr.VENTED" value="Yes" />Yes
                            <input type="radio" checked="checked" name="Instr.VENTED" value="No" />No
                        </span>
                    </div>
                </div>
            </div>
        </div>

        @{ DEPLOYMENT_TYPE thisDepType = ViewData["aDeploymentType"] as DEPLOYMENT_TYPE;}
        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(InstrumentsStrings.DeploymentType_Label)</div>
                <div class="ui-block-b">
                    <span id="DepTypeDDL">
                        <select id="DepTypeSelect" class="stnSelectInput" name="Instr.DEPLOYMENT_TYPE_ID" data-native-menu="false" data-mini="true">
					        @foreach (DEPLOYMENT_TYPE aDT in ViewData["DeplTypes"] as List<DEPLOYMENT_TYPE>)
             {
                                <option @(aDT.DEPLOYMENT_TYPE_ID == thisDepType.DEPLOYMENT_TYPE_ID ? "selected" : "") value="@aDT.DEPLOYMENT_TYPE_ID">@aDT.METHOD</option>
             }
                        </select>
                    </span>
                    <br />	
                </div>
            </div>
        </div> 

        <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">@Html.Label(InstrumentsStrings.LocationDesc_Label)</div>
                    <div class="ui-block-b"><textarea rows="4" cols="30" class="stnTextInput ui-shadow-inset" name="Instr.LOCATION_DESCRIPTION" data-mini="true"></textarea></div>
                </div>
        </div>        

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                 <div class="ui-block-a">@Html.Label(InstrumentsStrings.Interval_Label)</div>
                    <div class="ui-block-b">
                        <input type="text" class="stnTextInput ui-shadow-inset" onkeypress="return isNumberKey(event)" id="interval" name="Instr.INTERVAL" data-mini="true" />
                        <span>
                            <input type="radio" name="IntervalUnit" value="Minute" />Minutes
                            <input type="radio" name="IntervalUnit" value="Second" />Seconds
                        </span>
                    </div>
            </div>
        </div>

        <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a"><span class="required">@Html.Label(InstrumentsStrings.TimeStamp_Label)</span></div>
                    <div class="ui-block-b"><input type="text" class="required stnTextInput ui-shadow-inset" name="DeplInstrStatus.TIME_STAMP" data-mini="true" value='@DateTime.UtcNow'/></div>
                    <div class="" id="DeplInstrStatus.TIME_STAMP_validate"></div>
                </div>
        </div>

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">Time Zone:</div> 
                <div class="ui-block-b">
                    <select id="timeZoneDD" class="stnSelectInput" name="DeplInstrStatus.TIME_ZONE" data-native-menu="false" data-mini="true">
					    @foreach (string tz in ViewData["TimeZones"] as List<string>)
                        {
                            <option @(tz == "UTC" ? "selected" : "") value='@tz'>@tz</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">@Html.Label(InstrumentsStrings.Notes_Label)</div>
                    <div class="ui-block-b"><textarea rows="4" cols="30" class="stnTextInput ui-shadow-inset" name="DeplInstrStatus.NOTES" data-mini="true"></textarea></div>
                </div>
        </div>

        
        <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">@Html.Label(globalStrings.ProposeMember_Label)</div>
                    <div class="ui-block-b"><label>@ViewData["ProposedBy"]</label></div>
                </div>
        </div>

        <div class="ui-grid-a">
                <div data-role="fieldcontain">
                    <div class="ui-block-a">@Html.Label(globalStrings.DeployTeam_Label)</div>
                    <div class="ui-block-b"><label>@Session["TeamName"]</label></div>
                </div>
        </div>

    </div>
    <div style="float:left;width:45%">  
        <div class="subSection softHeader" style="width:90%;min-height:120px;overflow:visible">
	        <div class="boxTitle">Tape Down Information</div>
            <br />

            <div class="ui-grid-a">
                <div class="ui-block-a">Site Objective Point(s):</div>
                <div class="ui-block-b">
                    @if (ViewData.ContainsKey("SiteOPs"))
                    {
                         <select id="SiteOPsDD" class="stnSelectInput ui-shadow-inset" style="width:215px !important" name="OPMeas.OBJECTIVE_POINT_ID" data-native-menu="false" data-mini="true">
                            <option value='0'></option>
                            @foreach (OBJECTIVE_POINT anOP in ViewData["SiteOPs"] as List<OBJECTIVE_POINT>)
                            {
                                <option value='@anOP.OBJECTIVE_POINT_ID'>@anOP.NAME</option> 
                            }
                        </select>
                     }
                     else
                    {
                    <div>No Objective Points were added to this Site</div>
                    }
                    
                
                <br />	
            </div>
        </div>
        <div id="opMeasurement" style="display:none">
            <table id="opTable" style="width:100%">
                <thead>
                    <tr>
                        <th style="width:25%">OP</th><th style="width:20%">Type</th><th>From OP</th><th>Hanging Length</th><th>Water Surface</th><th>Ground Surface</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>        
</div>
    
    <br clear="all" />
    <br />
    
    <div id="formSubmitDiv" class="formSection">
        <div class="leftSideSubmit">
            <div class="cancelDiv"><div class="lightButtonBorder"><input id="resetButton" type="reset" class="cancel" value="Cancel" onclick="cancelClick();" /></div></div>
            <div class="submitDiv"><div class="darkButtonBorder"><input type="submit" class="submit" value="Deploy" /></div></div>

            <asp:Button ID="SaveSiteButton" runat="server" Text="Save" />
        </div>
    
    </div>
}

<style type="text/css">
    #DeployProposedForm label.error {
        width: auto;
        display: inline;
        color: Red;
    } 
</style>
<script type="text/javascript">
    $("#SensorTypeDDL").change(function () {
        $.post("../GetDeptTypeList/", { id: $(this).val() }, function (data) {
            populateDD($("#DepTypeSelect"), data);
        });
        //show vented radio buttons only if sensorType == 1
        if ($("#SensorTypeDDL option:selected").val() == 1) {
            $("#vendedDiv").css('display', 'inline');
        }
        else {
            $("#vendedDiv").css('display', 'none');
        }
    });
    
    function populateDD(select, data) {
        select.empty();
        $.each(data, function (id, option) {
            select.append($('<option/>', {
                value: option.DEPLOYMENT_TYPE_ID,
                text: option.METHOD
            }));
        });
    }     

    function loading() {
        $("#loading").fadeIn();
    };

    function cancelClick() {
        $("#loading").fadeIn();
        window.location.href = '@Url.Action("Details", "Sites", new { id = ViewData["SiteId"] })'
    };

    $(function () {
        //datepicker 
        $('input').filter('.datepicker').datepicker({
            changeMonth: true,
            yearRange: '1965:2030',
            changeYear: true
        });

    });

    $().ready(function () {
        //validate form on and submit        
        $("#DeployProposedForm").validate();        
        $("#DeployProposedForm").removeData("validator");
        $("#DeployProposedForm").removeData("unobtrusiveValidation");

        $("#DeployProposedForm").validate({
            rules: {
                'Instr.SENSOR_TYPE_ID': "required",
                'Instr.SENSOR_BRAND_ID': "required",
                'Instr.SERIAL_NUMBER': "required",
                'DeplInstrStatus.TIME_STAMP': "required"
            },
            messages: {
                'Instr.SENSOR_TYPE_ID': "Required",
                'Instr.SENSOR_BRAND_ID': "Required",
                'Instr.SERIAL_NUMBER': "Required",
                'DeplInstrStatus.TIME_STAMP': "Required"
            },
            submitHandler: function (form) {
                $("#loading").fadeIn();
                form.submit();
            }
        });

        //show vented radio buttons only if sensorType == 1
        if ($("#hiddenSensorTypeID").val() == 1) {
            $("#vendedDiv").css('display', 'inline');
        }
        else {
            $("#vendedDiv").css('display', 'none');
        }
    });

   $("#SiteOPsDD").change(function () {
       var siteOPs = $("#SiteOPsDD").val();
       var textOP = $("#SiteOPsDD option:selected").text();

       if (siteOPs >= 1) {
           //add a row to the table
           $(opMeasurement).css("display", "inline-table");
           $("#opTable tbody").empty();
           $("#opTable tbody").append('<tr id="0">' +
              '<td style="width:16%">' + textOP + '<input type="hidden" name="OPMeas.OBJECTIVE_POINT_ID" value="' + siteOPs + '" /></td>' +
              '<td><div><input type="radio" name="OPMeas.TYPE" value="Foreshot" />Foreshot</div><div><input type="radio" name="OPMeas.TYPE" value="Elevation" />Elevation</div></td>' +
              '<td><input type="text" style="width:80%" onkeypress="return isNegNumberKey(event)" class="stnTextInput ui-shadow-inset" name="OPMeas.FROM_RP" /></td>' +
              '<td><input type="text" style="width:80%" onkeypress="return isNegNumberKey(event)" class="stnTextInput ui-shadow-inset" name="OPMeas.HANGING_LENGTH" /></td>' +
              '<td><input type="text" style="width:80%" onkeypress="return isNegNumberKey(event)" class="stnTextInput ui-shadow-inset" name="OPMeas.WATER_SURFACE" /></td>' +
              '<td><input type="text" style="width:80%" onkeypress="return isNegNumberKey(event)" class="stnTextInput ui-shadow-inset" name="OPMeas.GROUND_SURFACE" /></td>' +
            '</tr>');
       }
       else {
           $("#opTable tbody tr").remove();
           $(opMeasurement).css("display", "none");
       }
   });              
     
    //number formatter (any number and decimal place) 
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    //number formatter ( with negative sign and any number and decimal place) 
    function isNegNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode > 31 && (charCode < 45 || charCode > 57)) {
            return false;
        }
        return true;
    }
</script>