@*Comments:
04.14.14 - TR - added validate
01.29.13 - TR - Created 
*@

@*
/* Authors:
 *      Tonia Roddick (troddick@usgs.gov)
 * Copyright:
 *      2013 USGS - WiM
 * Purpose:
 *      Display Create form for Peak Summary Information
 */
 *@
@using STNServices;
@using STNServices.Resources;
@using STNWeb.Assets.Resources;

@model STNServices.PEAK_SUMMARY

@{
    ViewBag.Title = "Create Peak Summary Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="@Url.Content("~/Assets/Scripts/jquery-1.8.3.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery-ui-1.10.4.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Assets/Scripts/jquery.maskedinput.min.js")" type="text/javascript"></script>

<div id="loading"><div id="loadingcontent"><p id="loadingspinner" style=""><img src="@Url.Content("~/Assets/Images/loading1.gif")"  /></p></div></div>

<div id="dataTitle">
    <div class="title">Create Peak Summary Information</div>
</div>
<br clear="all" />
<hr class="headerUnderline" />

@using (Ajax.BeginForm("CreatePeakSumForm", "PeakSummary", new AjaxOptions() { HttpMethod="POST"}, new { @id = "CreatePeakForm"}))
{
    <div class="fiftyPercColumn">
        <input type="hidden" name="objID" value='@ViewData["ObjectID"]' />
        <input type="hidden" id="from" name="From" value='@ViewData["FROM"]' />

        <div class="bold">@Html.Label(globalStrings.PeakSummary_Label)</div>    

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a"><span class="required">@Html.Label(globalStrings.PS_PeakDate_Label)</span></div>
                <div class="ui-block-b"><input type="text" class="stnTextInput required datepicker ui-shadow-inset" id="pDate" name="PeakDate" data-mini="true" /></div>
            </div>
        </div>

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(globalStrings.PS_PeakDateEst_Label)</div>
                <div class="ui-block-b"><input type="checkbox" name="DateEstimated" value="1" /></div>
            </div>
        </div>

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">Peak Time (standard time):</div>
                <div class="ui-block-b"><input type="text" class="stnTextInput ui-shadow-inset" id="peakTime" name="PeakTime" data-mini="true" />
                    <label>hh:mm AM/PM</label>
                </div>
            </div>
        </div>

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a"><span class="required">Peak Recorded In:</span></div>
                <div class="ui-block-b">
                    <select id="timeZoneDD" class="required stnSelectInput" name="TimeZone" data-native-menu="false" data-mini="true">
					    <option value="">Choose Time Zone</option> 
                        @foreach (string tz in ViewData["TimeZones"] as List<string>)
                        {
                            <option value='@tz'>@tz</option>
                        }
                    </select>
                </div>
             </div>
        </div>

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(globalStrings.PS_PeakTimeEst_Label)</div>
                <div class="ui-block-b"><input type="checkbox" name="TimeEstimated" value="1" /></div>
            </div>
        </div>
            
        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(globalStrings.PS_PeakStage_Label)</div>
                <div class="ui-block-b"><input type="text" class="stnTextInput ui-shadow-inset" onkeypress="return isNumberKey(event)" id="peakStage" name="PeakStage" data-mini="true" /></div>
            </div>
        </div>
    
        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(globalStrings.PS_PeakStageEst_Label)</div>
                <div class="ui-block-b"><input type="checkbox" name="StageEstimated" value="1" /></div>
            </div>
        </div>
    
        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(globalStrings.VDatum_Label)</div>
                <div class="ui-block-b">
                    <select id="VDatumDrop" class="stnSelectInput" name="VdatumID" data-native-menu="false" data-mini="true">
					    <option value="0">Choose Vertical Datum</option> 
                        @foreach (VERTICAL_DATUMS Vd in ViewData["VerticalDatums"] as List<VERTICAL_DATUMS>)
                        {
                            <option value='@Vd.DATUM_ID'>@Vd.DATUM_NAME</option>
                        }
                    </select>
                </div>
             </div>
        </div>

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a"><span>@Html.Label(globalStrings.PS_PeakHAG_Label)</span><br /><span>(Depth of Water)</span></div>
                <div class="ui-block-b"><input type="text" class="stnTextInput ui-shadow-inset" id="hag" onkeypress="return isNegNumberKey(event)" name="HeightAboveGround" data-mini="true" /></div>
            </div>
        </div>
    
        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(globalStrings.PS_PeakHAGEst_Label)</div>
                <div class="ui-block-b"><input type="checkbox" name="HAGEstimated" value="1" /></div>
            </div>
        </div>

        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(globalStrings.PS_PeakDischarge_Label)</div>
                <div class="ui-block-b"><input type="text" class="stnTextInput ui-shadow-inset" id="discharge" onkeypress="return isNumberKey(event)" name="PeakDischarge" data-mini="true" /></div>
            </div>
        </div>
    
        <div class="ui-grid-a">
            <div data-role="fieldcontain">
                <div class="ui-block-a">@Html.Label(globalStrings.PS_PeakDischargeEst_Label)</div>
                <div class="ui-block-b"><input type="checkbox" name="DischargeEstimated" value="1" /></div>
            </div>
        </div>

    </div>
    
    <br clear="all" />
    <br />
    
    <div id="formSubmitDiv" class="formSection">
        <div class="leftSideSubmit">
            <div class="cancelDiv"><div class="lightButtonBorder"><input id="resetButton" type="reset" class="cancel" value="Cancel" onclick="cancelClick();" /></div></div>
            <div class="submitDiv"><div class="darkButtonBorder"><input type="submit" class="submit" value="Submit" /></div></div>

            <asp:Button ID="SaveSiteButton" runat="server" Text="Save" />
        </div>
    
    </div>
}
<style type="text/css">
    #CreatePeakForm label.error {
        margin-left: 10px;
        width: auto;
        display: inline;
        color: Red;
    } 
</style>

<script type="text/javascript">

    //number formatter (any number and decimal place)
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function isNegNumberKey(evt) {
        //this allows only numbers and negative sign
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode > 31 && (charCode < 45 || charCode > 57)) {
            return false;
        }

        return true;
    }
    function cancelClick() {
        $("#loading").fadeIn();
        if ($("#from").val() == "HWM") {
            window.location.href = '@Url.Action("Details", "HWMs", new { id = ViewData["ObjectID"] })'
        }
        else {
            window.location.href = '@Url.Action("FileDetails", "Files", new { id = ViewData["ObjectID"] })'
        }
    };

    function loading() {
        $("#loading").fadeIn();
    }

    $(function () {
        //datepicker 
        $('input').filter('.datepicker').datepicker({
            changeMonth: true,
            yearRange: '1965:2030',
            changeYear: true
        });

        //$.mask.definitions['h'] = "[A-Pa-p]"
        $.mask.definitions['h'] = "[aApP]"
        $.mask.definitions['i'] = "[mM]"
        $.mask.definitions['a'] = "[01]"
        $.mask
        $.mask.definitions['b'] = "[012345]"
        //$("#peakTime").mask("99:99 hh");
        $("#peakTime").mask("a9:b9 hi");
        
    });


    $().ready(function () {
        //validate form on and submit
        $("#CreatePeakForm").validate({
            rules: {
                'PeakDate': "required",
                'TimeZone': "required"
            },
            message: {
                'PeakDate': "Required",
                'TimeZone': "Required"
            },   
            submitHandler: function (form) {
                $("#loading").fadeIn();
                form.submit();
            }
        });
    });

    window.onload = function () {
        var txtbox = document.getElementById("pDate");
        txtbox.focus();
    }

</script>
